{
  "name": "vscode-intelli-refactor",
  "displayName": "Intelli Refactor",
  "description": "Smartly select range for refactoring under cursor, like IntelliJ / Android Studio.",
  "version": "0.1.1",
  "publisher": "ypresto",
  "license": "MIT",
  "keywords": [
    "intelli-refactor",
    "IntelliJ",
    "Android Studio",
    "refactor",
    "refactoring",
    "extract",
    "quick fix",
    "quickfix"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/ypresto/vscode-intelli-refactor.git"
  },
  "homepage": "https://github.com/ypresto/vscode-intelli-refactor",
  "bugs": {
    "url": "https://github.com/ypresto/vscode-intelli-refactor/issues"
  },
  "engines": {
    "vscode": "^1.38.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "icon.png",
  "//activationEvents": "NOTE: Generated. Do not write by hand.",
  "activationEvents": [
    "onCommand:intelli-refactor.quickFix",
    "onCommand:intelli-refactor.refactor",
    "onCommand:intelli-refactor.move",
    "onCommand:intelli-refactor.rewrite",
    "onCommand:intelli-refactor.extract",
    "onCommand:intelli-refactor.extract.localVariable",
    "onCommand:intelli-refactor.extract.constant",
    "onCommand:intelli-refactor.extract.function",
    "onCommand:intelli-refactor.extract.type",
    "onCommand:intelli-refactor.inline"
  ],
  "main": "./out/extension.js",
  "//contributes": "NOTE: Some entry in contributes are generated by code. Run 'yarn run update-package-json' to update them.",
  "contributes": {
    "configuration": {
      "title": "TypeScript",
      "properties": {
        "intelli-refactor.useCompatSelection": {
          "type": "boolean",
          "default": false,
          "description": "Enable this if you are using old refactor extension and getting unexpected \"No code actions available\" message after selection expanded. See microsoft/vscode#49024 for detail. Selection will blink while loading actions."
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "when": "editorHasCodeActionsProvider && !editorReadonly",
          "command": "intelli-refactor.refactor",
          "group": "1_modification"
        }
      ]
    },
    "commands": [
      {
        "command": "intelli-refactor.quickFix",
        "title": "Quick Fix...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.refactor",
        "title": "Refactor...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.move",
        "title": "Move...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.rewrite",
        "title": "Rewrite...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.extract",
        "title": "Extract...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.extract.localVariable",
        "title": "Extract Local Variable...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.extract.constant",
        "title": "Extract Constant...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.extract.function",
        "title": "Extract Function...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.extract.type",
        "title": "Extract Type...",
        "category": "Intelli Refactor"
      },
      {
        "command": "intelli-refactor.inline",
        "title": "Inline...",
        "category": "Intelli Refactor"
      }
    ],
    "keybindings": [
      {
        "command": "intelli-refactor.quickFix",
        "key": "alt+enter",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "intelli-refactor.refactor",
        "key": "ctrl+shift+alt+t",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "intelli-refactor.move",
        "key": "f6",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "intelli-refactor.extract.localVariable",
        "key": "ctrl+alt+v",
        "mac": "cmd+alt+v",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "intelli-refactor.extract.constant",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "intelli-refactor.extract.function",
        "key": "ctrl+alt+m",
        "mac": "cmd+alt+m",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "intelli-refactor.extract.type",
        "key": "ctrl+shift+alt+a",
        "mac": "cmd+shift+alt+a",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "intelli-refactor.inline",
        "key": "ctrl+alt+n",
        "mac": "cmd+alt+n",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile && node out/scripts/update-package-json.js",
    "compile": "rm -rf ./out && tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile",
    "test": "node ./out/test/runTest.js",
    "update-package-json": "yarn run compile && node out/scripts/update-package-json.js"
  },
  "dependencies": {
    "typescript": "^4.1.3"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/lodash.flatmap": "^4.5.6",
    "@types/mocha": "^8.2.0",
    "@types/node": "^14.14.20",
    "@types/vscode": "^1.38.0",
    "glob": "^7.1.6",
    "lodash.flatmap": "^4.5.0",
    "mocha": "^8.2.1",
    "vscode-test": "^1.4.1"
  }
}
